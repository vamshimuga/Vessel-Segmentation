/********************************************************************************
** Form generated from reading UI file 'mainwindow.ui'
**
** Created by: Qt User Interface Compiler version 5.6.0
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H

#include <QtCore/QVariant>
#include <QtWidgets/QAction>
#include <QtWidgets/QApplication>
#include <QtWidgets/QButtonGroup>
#include <QtWidgets/QCheckBox>
#include <QtWidgets/QComboBox>
#include <QtWidgets/QDoubleSpinBox>
#include <QtWidgets/QGridLayout>
#include <QtWidgets/QGroupBox>
#include <QtWidgets/QHBoxLayout>
#include <QtWidgets/QHeaderView>
#include <QtWidgets/QLabel>
#include <QtWidgets/QLineEdit>
#include <QtWidgets/QListView>
#include <QtWidgets/QMainWindow>
#include <QtWidgets/QMenu>
#include <QtWidgets/QMenuBar>
#include <QtWidgets/QProgressBar>
#include <QtWidgets/QPushButton>
#include <QtWidgets/QRadioButton>
#include <QtWidgets/QSlider>
#include <QtWidgets/QSpinBox>
#include <QtWidgets/QSplitter>
#include <QtWidgets/QStackedWidget>
#include <QtWidgets/QStatusBar>
#include <QtWidgets/QTabWidget>
#include <QtWidgets/QTextBrowser>
#include <QtWidgets/QToolBar>
#include <QtWidgets/QToolBox>
#include <QtWidgets/QToolButton>
#include <QtWidgets/QWidget>
#include "MiaViewModules/miaimageview2d.h"
#include "MiaViewModules/miaimageview3d.h"
#include "listviewwithkeyboardsupport.h"

QT_BEGIN_NAMESPACE

class Ui_MainWindow
{
public:
    QAction *actionOpen_mhd_file;
    QAction *actionOpen_DICOM_folder;
    QAction *actionOpen_2D_image;
    QAction *actionOnline_Tutorial;
    QAction *actionAbout_MiaLite;
    QAction *actionPan;
    QAction *actionWindow_Setting;
    QAction *actionZoom;
    QAction *actionCurve_ROI;
    QAction *actionNextStep;
    QAction *actionLoadCenterline;
    QAction *actionThresholdBasedSegmentation;
    QAction *actionClickDragInteractiveSegmentation;
    QAction *actionModelBasedSegmentation;
    QAction *actionRegistration;
    QAction *actionModelBasedMethod;
    QAction *actionVesselAnalysis;
    QAction *actionBrainSegmentation;
    QAction *actionLiverSegmentMarking;
    QAction *actionLeftVentricleSegmentation;
    QAction *actionBodyPartDetectorTraining;
    QAction *actionBodyPartDetection;
    QAction *actionOpen_Nifti_file;
    QAction *actionFuzzyConnectednessSegmentation;
    QAction *actionBoneSegmentationPrinting;
    QAction *actionOpen_VTK_file;
    QAction *actionMutli_Layer_Level_Set;
    QAction *actionMulti_seed_vessel_segmentation;
    QWidget *centralWidget;
    QHBoxLayout *horizontalLayout;
    QToolBox *toolBox;
    QWidget *step1;
    QToolButton *openButton;
    QWidget *methodSelectionWidget;
    QLabel *label;
    QToolButton *chooseOperationButton;
    QWidget *thresholdWidget;
    QSlider *upperThresholdSlider_2;
    QLabel *label_8;
    QLabel *label_7;
    QSlider *lowerThresholdSlider_2;
    QSpinBox *upperThresholdSpin_2;
    QSpinBox *lowerThresholdSpin_2;
    QPushButton *nextstepBotton1;
    QLabel *label_11;
    QLabel *imageSummary;
    QWidget *step2;
    QPushButton *nextstepBotton2;
    QPushButton *prestepButton2;
    listViewWithKeyBoardSupport *markerListView;
    QLabel *label_2;
    QCheckBox *showBlockerCheckBox;
    QGroupBox *blockerGroupBox;
    listViewWithKeyBoardSupport *stopMarkerListView;
    QPushButton *seedButton;
    QLabel *label_10;
    QLabel *label_9;
    QPushButton *saveSeedButton;
    QPushButton *loadSeedButton;
    QPushButton *startFuzzyConectednessButton;
    QWidget *step3;
    QPushButton *startButton;
    QPushButton *stopButton;
    QProgressBar *progressBar;
    QLabel *label_3;
    QLabel *LSStatus;
    QPushButton *nextstepBotton3;
    QPushButton *prestepButton3;
    QTabWidget *levelSetTabWidget;
    QWidget *parameterTab;
    QSlider *lowerThresholdSlider;
    QLabel *label_5;
    QSpinBox *lowerThresholdSpin;
    QSlider *upperThresholdSlider;
    QSpinBox *upperThresholdSpin;
    QLabel *label_4;
    QSlider *smoothFactorSlider;
    QDoubleSpinBox *smoothFactorSpin;
    QLabel *label_6;
    QWidget *blockerTab;
    listViewWithKeyBoardSupport *stopMarkerListView_2;
    QLabel *label_12;
    QLabel *label_13;
    QCheckBox *blockerEditCheckBox;
    QSpinBox *maxiterationSpinBox;
    QCheckBox *multi_Resolution_CheckBox;
    QPushButton *speedBoostingHelpButton;
    QWidget *step4;
    QPushButton *saveButton;
    QPushButton *saveSTLButton;
    QPushButton *prestepButton4;
    QLabel *label_14;
    QTextBrowser *resultSummary;
    QPushButton *gobackOsiriX;
    QPushButton *saveTextButton;
    QSpinBox *smoothingIterationSpinBox;
    QLabel *label_15;
    QWidget *VesselAnalysisPage;
    QPushButton *startVesselAnalysisButton;
    QPushButton *loadVesselCenterlineButton;
    QPushButton *stopVesselAnalysisButton;
    QLabel *label_16;
    QSlider *smoothFactorSlider_2;
    QDoubleSpinBox *smoothFactorSpin_2;
    QPushButton *exportVesselAnalysisButton;
    QPushButton *loadRawButton;
    QPushButton *exportVTKButton;
    QSpinBox *upperThresholdSpin_4;
    QLabel *label_17;
    QLabel *label_22;
    QSlider *lowerThresholdSlider_4;
    QSlider *upperThresholdSlider_4;
    QSpinBox *lowerThresholdSpin_4;
    QProgressBar *vesselProgressBar;
    QLabel *vesselStatusLabel;
    QPushButton *exportCrossSectionButton;
    QPushButton *loadCrossSectionButton;
    QPushButton *initializeVesselCenterlineButton;
    QComboBox *viewImageSourceVesselAnalyssisComboBox;
    QWidget *InteracitveSegmentationPage;
    QGroupBox *groupBox;
    QRadioButton *setToAddingRadio;
    QRadioButton *setToRemovingRadio;
    QGroupBox *interactiveSegmentParameterGroupBox;
    QSlider *smoothFactorSlider_3;
    QSlider *upperThresholdSlider_3;
    QSlider *lowerThresholdSlider_3;
    QDoubleSpinBox *smoothFactorSpin_3;
    QSpinBox *lowerThresholdSpin_3;
    QLabel *label_20;
    QSpinBox *upperThresholdSpin_3;
    QLabel *label_18;
    QLabel *label_19;
    QCheckBox *usingAutomaticThresholdButton;
    QCheckBox *showAdvancedSettingsForInteractiveSegButton;
    QTextBrowser *resultSummary_2;
    QLabel *label_21;
    QPushButton *resetButton;
    QPushButton *saveButton_interactive;
    QPushButton *undoButton;
    QPushButton *gobackOsiriX2;
    QPushButton *saveTextButton_2;
    QWidget *RegistrationPage;
    QPushButton *startRegistrationButton;
    QPushButton *openMovingImageButton;
    QPushButton *resetRegistrationButton;
    QComboBox *viewImageSource;
    QPushButton *saveRegistrationButton;
    QPushButton *loadRegistrationButton;
    QCheckBox *modelMaskCheckBox;
    QCheckBox *levesSetMaskCheckBox;
    QPushButton *saveRegistrationResultButton;
    QPushButton *saveSegmentationResultButton;
    QLineEdit *translationLineEdit;
    QLabel *label_24;
    QLineEdit *rotationLineEdit;
    QLabel *label_25;
    QLabel *label_26;
    QLineEdit *scalingLineEdit;
    QLineEdit *mappingLineEdit;
    QLabel *label_27;
    QPushButton *openWeightingImageButton;
    QComboBox *phaseSelectionButton;
    QWidget *brainSegmentationPage;
    QPushButton *startWMSegmentationButton;
    QPushButton *startGMSegmentationButton;
    QPushButton *saveBrainResultButton;
    QPushButton *creatSurfaceModelButton;
    QComboBox *viewImageSourceComboBox;
    QCheckBox *whiteMatterMaskCheckBox;
    QCheckBox *grayMatterMaskCheckBox;
    QCheckBox *surfaceModelMaskCheckBox;
    QLabel *LSStatus_BrainPage;
    QProgressBar *progressBar_BrainPage;
    QLabel *label_23;
    QPushButton *applySurfaceModelButton;
    QWidget *randomForestTrainingPage;
    QListView *trainingImageListView;
    QPushButton *gotoPreviousTrainingImageButton;
    QPushButton *gotoNextTrainingImageButton;
    QPushButton *addTrainningImageButton;
    QLabel *label_28;
    QPushButton *saveTrainingSettingButton;
    listViewWithKeyBoardSupport *trainingMarkerListView;
    QPushButton *loadTrainingSettingButton;
    QLabel *label_29;
    QPushButton *startTrainingButton;
    QPushButton *saveTrainedForest;
    QPushButton *loadTrainedForest;
    QSplitter *mPRSplitter;
    QWidget *layoutWidget;
    QGridLayout *gridLayout;
    MiaImageView2D *leftUpperView;
    MiaImageView2D *leftLowerView;
    MiaImageView3D *rightLowerView;
    MiaImageView2D *rightUpperView;
    QStackedWidget *stackedWidget;
    QWidget *curvedMPRPage;
    QGridLayout *gridLayout_2;
    QWidget *widget;
    QPushButton *nextAngleButton;
    QPushButton *nextPositionButton;
    MiaImageView2D *curvedMPRV;
    QWidget *stackedWidgetPage2;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuOpen;
    QMenu *menuHelp;
    QMenu *menuOperations;
    QMenu *menuWorkFlow;
    QToolBar *mainToolBar;
    QStatusBar *statusBar;

    void setupUi(QMainWindow *MainWindow)
    {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName(QStringLiteral("MainWindow"));
        MainWindow->resize(1204, 892);
        QSizePolicy sizePolicy(QSizePolicy::Preferred, QSizePolicy::Preferred);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(MainWindow->sizePolicy().hasHeightForWidth());
        MainWindow->setSizePolicy(sizePolicy);
        MainWindow->setMinimumSize(QSize(800, 600));
        actionOpen_mhd_file = new QAction(MainWindow);
        actionOpen_mhd_file->setObjectName(QStringLiteral("actionOpen_mhd_file"));
        actionOpen_DICOM_folder = new QAction(MainWindow);
        actionOpen_DICOM_folder->setObjectName(QStringLiteral("actionOpen_DICOM_folder"));
        actionOpen_2D_image = new QAction(MainWindow);
        actionOpen_2D_image->setObjectName(QStringLiteral("actionOpen_2D_image"));
        actionOnline_Tutorial = new QAction(MainWindow);
        actionOnline_Tutorial->setObjectName(QStringLiteral("actionOnline_Tutorial"));
        actionAbout_MiaLite = new QAction(MainWindow);
        actionAbout_MiaLite->setObjectName(QStringLiteral("actionAbout_MiaLite"));
        QIcon icon;
        icon.addFile(QStringLiteral(":/image/logo"), QSize(), QIcon::Normal, QIcon::Off);
        actionAbout_MiaLite->setIcon(icon);
        actionPan = new QAction(MainWindow);
        actionPan->setObjectName(QStringLiteral("actionPan"));
        QIcon icon1;
        icon1.addFile(QStringLiteral(":/image/pan"), QSize(), QIcon::Normal, QIcon::Off);
        actionPan->setIcon(icon1);
        actionWindow_Setting = new QAction(MainWindow);
        actionWindow_Setting->setObjectName(QStringLiteral("actionWindow_Setting"));
        QIcon icon2;
        icon2.addFile(QStringLiteral(":/image/win"), QSize(), QIcon::Normal, QIcon::Off);
        actionWindow_Setting->setIcon(icon2);
        actionZoom = new QAction(MainWindow);
        actionZoom->setObjectName(QStringLiteral("actionZoom"));
        QIcon icon3;
        icon3.addFile(QStringLiteral(":/image/zoom"), QSize(), QIcon::Normal, QIcon::Off);
        actionZoom->setIcon(icon3);
        actionCurve_ROI = new QAction(MainWindow);
        actionCurve_ROI->setObjectName(QStringLiteral("actionCurve_ROI"));
        QIcon icon4;
        icon4.addFile(QStringLiteral(":/image/openCurveROI"), QSize(), QIcon::Normal, QIcon::Off);
        actionCurve_ROI->setIcon(icon4);
        actionNextStep = new QAction(MainWindow);
        actionNextStep->setObjectName(QStringLiteral("actionNextStep"));
        actionLoadCenterline = new QAction(MainWindow);
        actionLoadCenterline->setObjectName(QStringLiteral("actionLoadCenterline"));
        actionThresholdBasedSegmentation = new QAction(MainWindow);
        actionThresholdBasedSegmentation->setObjectName(QStringLiteral("actionThresholdBasedSegmentation"));
        actionClickDragInteractiveSegmentation = new QAction(MainWindow);
        actionClickDragInteractiveSegmentation->setObjectName(QStringLiteral("actionClickDragInteractiveSegmentation"));
        actionModelBasedSegmentation = new QAction(MainWindow);
        actionModelBasedSegmentation->setObjectName(QStringLiteral("actionModelBasedSegmentation"));
        actionRegistration = new QAction(MainWindow);
        actionRegistration->setObjectName(QStringLiteral("actionRegistration"));
        actionModelBasedMethod = new QAction(MainWindow);
        actionModelBasedMethod->setObjectName(QStringLiteral("actionModelBasedMethod"));
        actionVesselAnalysis = new QAction(MainWindow);
        actionVesselAnalysis->setObjectName(QStringLiteral("actionVesselAnalysis"));
        actionBrainSegmentation = new QAction(MainWindow);
        actionBrainSegmentation->setObjectName(QStringLiteral("actionBrainSegmentation"));
        actionLiverSegmentMarking = new QAction(MainWindow);
        actionLiverSegmentMarking->setObjectName(QStringLiteral("actionLiverSegmentMarking"));
        actionLeftVentricleSegmentation = new QAction(MainWindow);
        actionLeftVentricleSegmentation->setObjectName(QStringLiteral("actionLeftVentricleSegmentation"));
        actionBodyPartDetectorTraining = new QAction(MainWindow);
        actionBodyPartDetectorTraining->setObjectName(QStringLiteral("actionBodyPartDetectorTraining"));
        actionBodyPartDetection = new QAction(MainWindow);
        actionBodyPartDetection->setObjectName(QStringLiteral("actionBodyPartDetection"));
        actionOpen_Nifti_file = new QAction(MainWindow);
        actionOpen_Nifti_file->setObjectName(QStringLiteral("actionOpen_Nifti_file"));
        actionFuzzyConnectednessSegmentation = new QAction(MainWindow);
        actionFuzzyConnectednessSegmentation->setObjectName(QStringLiteral("actionFuzzyConnectednessSegmentation"));
        actionBoneSegmentationPrinting = new QAction(MainWindow);
        actionBoneSegmentationPrinting->setObjectName(QStringLiteral("actionBoneSegmentationPrinting"));
        actionOpen_VTK_file = new QAction(MainWindow);
        actionOpen_VTK_file->setObjectName(QStringLiteral("actionOpen_VTK_file"));
        actionMutli_Layer_Level_Set = new QAction(MainWindow);
        actionMutli_Layer_Level_Set->setObjectName(QStringLiteral("actionMutli_Layer_Level_Set"));
        actionMulti_seed_vessel_segmentation = new QAction(MainWindow);
        actionMulti_seed_vessel_segmentation->setObjectName(QStringLiteral("actionMulti_seed_vessel_segmentation"));
        centralWidget = new QWidget(MainWindow);
        centralWidget->setObjectName(QStringLiteral("centralWidget"));
        QSizePolicy sizePolicy1(QSizePolicy::Expanding, QSizePolicy::Expanding);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(centralWidget->sizePolicy().hasHeightForWidth());
        centralWidget->setSizePolicy(sizePolicy1);
        horizontalLayout = new QHBoxLayout(centralWidget);
        horizontalLayout->setSpacing(6);
        horizontalLayout->setContentsMargins(11, 11, 11, 11);
        horizontalLayout->setObjectName(QStringLiteral("horizontalLayout"));
        toolBox = new QToolBox(centralWidget);
        toolBox->setObjectName(QStringLiteral("toolBox"));
        QSizePolicy sizePolicy2(QSizePolicy::Maximum, QSizePolicy::Preferred);
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(toolBox->sizePolicy().hasHeightForWidth());
        toolBox->setSizePolicy(sizePolicy2);
        toolBox->setMinimumSize(QSize(200, 0));
        toolBox->setBaseSize(QSize(150, 0));
        step1 = new QWidget();
        step1->setObjectName(QStringLiteral("step1"));
        step1->setGeometry(QRect(0, 0, 200, 457));
        openButton = new QToolButton(step1);
        openButton->setObjectName(QStringLiteral("openButton"));
        openButton->setGeometry(QRect(20, 0, 151, 32));
        openButton->setPopupMode(QToolButton::InstantPopup);
        openButton->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);
        openButton->setArrowType(Qt::NoArrow);
        methodSelectionWidget = new QWidget(step1);
        methodSelectionWidget->setObjectName(QStringLiteral("methodSelectionWidget"));
        methodSelectionWidget->setGeometry(QRect(0, 50, 211, 131));
        label = new QLabel(methodSelectionWidget);
        label->setObjectName(QStringLiteral("label"));
        label->setGeometry(QRect(10, 0, 191, 41));
        label->setWordWrap(true);
        chooseOperationButton = new QToolButton(methodSelectionWidget);
        chooseOperationButton->setObjectName(QStringLiteral("chooseOperationButton"));
        chooseOperationButton->setGeometry(QRect(20, 50, 151, 32));
        chooseOperationButton->setPopupMode(QToolButton::InstantPopup);
        chooseOperationButton->setToolButtonStyle(Qt::ToolButtonTextBesideIcon);
        chooseOperationButton->setArrowType(Qt::NoArrow);
        thresholdWidget = new QWidget(step1);
        thresholdWidget->setObjectName(QStringLiteral("thresholdWidget"));
        thresholdWidget->setGeometry(QRect(0, 260, 201, 181));
        upperThresholdSlider_2 = new QSlider(thresholdWidget);
        upperThresholdSlider_2->setObjectName(QStringLiteral("upperThresholdSlider_2"));
        upperThresholdSlider_2->setGeometry(QRect(20, 145, 160, 22));
        upperThresholdSlider_2->setMinimum(-1200);
        upperThresholdSlider_2->setMaximum(2000);
        upperThresholdSlider_2->setValue(500);
        upperThresholdSlider_2->setOrientation(Qt::Horizontal);
        upperThresholdSlider_2->setTickPosition(QSlider::TicksBelow);
        upperThresholdSlider_2->setTickInterval(20);
        label_8 = new QLabel(thresholdWidget);
        label_8->setObjectName(QStringLiteral("label_8"));
        label_8->setGeometry(QRect(17, 120, 111, 16));
        label_7 = new QLabel(thresholdWidget);
        label_7->setObjectName(QStringLiteral("label_7"));
        label_7->setGeometry(QRect(14, 56, 111, 16));
        lowerThresholdSlider_2 = new QSlider(thresholdWidget);
        lowerThresholdSlider_2->setObjectName(QStringLiteral("lowerThresholdSlider_2"));
        lowerThresholdSlider_2->setGeometry(QRect(20, 76, 160, 22));
        lowerThresholdSlider_2->setMinimum(-1200);
        lowerThresholdSlider_2->setMaximum(2000);
        lowerThresholdSlider_2->setValue(200);
        lowerThresholdSlider_2->setOrientation(Qt::Horizontal);
        lowerThresholdSlider_2->setTickPosition(QSlider::TicksBelow);
        lowerThresholdSlider_2->setTickInterval(20);
        upperThresholdSpin_2 = new QSpinBox(thresholdWidget);
        upperThresholdSpin_2->setObjectName(QStringLiteral("upperThresholdSpin_2"));
        upperThresholdSpin_2->setGeometry(QRect(140, 115, 57, 25));
        upperThresholdSpin_2->setMinimum(-1200);
        upperThresholdSpin_2->setMaximum(2000);
        upperThresholdSpin_2->setValue(500);
        lowerThresholdSpin_2 = new QSpinBox(thresholdWidget);
        lowerThresholdSpin_2->setObjectName(QStringLiteral("lowerThresholdSpin_2"));
        lowerThresholdSpin_2->setGeometry(QRect(140, 51, 57, 25));
        lowerThresholdSpin_2->setMinimum(-1200);
        lowerThresholdSpin_2->setMaximum(2000);
        lowerThresholdSpin_2->setValue(200);
        nextstepBotton1 = new QPushButton(thresholdWidget);
        nextstepBotton1->setObjectName(QStringLiteral("nextstepBotton1"));
        nextstepBotton1->setGeometry(QRect(100, 195, 91, 32));
        label_11 = new QLabel(thresholdWidget);
        label_11->setObjectName(QStringLiteral("label_11"));
        label_11->setGeometry(QRect(10, 17, 191, 31));
        label_11->setWordWrap(true);
        imageSummary = new QLabel(step1);
        imageSummary->setObjectName(QStringLiteral("imageSummary"));
        imageSummary->setGeometry(QRect(3, 30, 201, 20));
        imageSummary->setWordWrap(true);
        toolBox->addItem(step1, QStringLiteral("Step 1: Loading Images"));
        step2 = new QWidget();
        step2->setObjectName(QStringLiteral("step2"));
        step2->setEnabled(true);
        step2->setGeometry(QRect(0, 0, 200, 457));
        nextstepBotton2 = new QPushButton(step2);
        nextstepBotton2->setObjectName(QStringLiteral("nextstepBotton2"));
        nextstepBotton2->setGeometry(QRect(100, 520, 101, 32));
        prestepButton2 = new QPushButton(step2);
        prestepButton2->setObjectName(QStringLiteral("prestepButton2"));
        prestepButton2->setGeometry(QRect(0, 520, 101, 32));
        markerListView = new listViewWithKeyBoardSupport(step2);
        markerListView->setObjectName(QStringLiteral("markerListView"));
        markerListView->setGeometry(QRect(30, 90, 151, 111));
        markerListView->setFocusPolicy(Qt::WheelFocus);
        label_2 = new QLabel(step2);
        label_2->setObjectName(QStringLiteral("label_2"));
        label_2->setGeometry(QRect(10, 0, 191, 61));
        label_2->setWordWrap(true);
        showBlockerCheckBox = new QCheckBox(step2);
        showBlockerCheckBox->setObjectName(QStringLiteral("showBlockerCheckBox"));
        showBlockerCheckBox->setGeometry(QRect(21, 240, 161, 20));
        blockerGroupBox = new QGroupBox(step2);
        blockerGroupBox->setObjectName(QStringLiteral("blockerGroupBox"));
        blockerGroupBox->setGeometry(QRect(8, 260, 191, 221));
        stopMarkerListView = new listViewWithKeyBoardSupport(blockerGroupBox);
        stopMarkerListView->setObjectName(QStringLiteral("stopMarkerListView"));
        stopMarkerListView->setGeometry(QRect(20, 50, 161, 121));
        stopMarkerListView->setFocusPolicy(Qt::WheelFocus);
        seedButton = new QPushButton(blockerGroupBox);
        seedButton->setObjectName(QStringLiteral("seedButton"));
        seedButton->setGeometry(QRect(9, 180, 181, 32));
        label_10 = new QLabel(blockerGroupBox);
        label_10->setObjectName(QStringLiteral("label_10"));
        label_10->setGeometry(QRect(20, 30, 81, 16));
        label_9 = new QLabel(step2);
        label_9->setObjectName(QStringLiteral("label_9"));
        label_9->setGeometry(QRect(30, 70, 62, 16));
        saveSeedButton = new QPushButton(step2);
        saveSeedButton->setObjectName(QStringLiteral("saveSeedButton"));
        saveSeedButton->setGeometry(QRect(20, 200, 81, 32));
        loadSeedButton = new QPushButton(step2);
        loadSeedButton->setObjectName(QStringLiteral("loadSeedButton"));
        loadSeedButton->setGeometry(QRect(100, 200, 81, 32));
        startFuzzyConectednessButton = new QPushButton(step2);
        startFuzzyConectednessButton->setObjectName(QStringLiteral("startFuzzyConectednessButton"));
        startFuzzyConectednessButton->setEnabled(true);
        startFuzzyConectednessButton->setGeometry(QRect(16, 490, 181, 32));
        toolBox->addItem(step2, QStringLiteral("Step 2: Defining Seeds"));
        step3 = new QWidget();
        step3->setObjectName(QStringLiteral("step3"));
        step3->setGeometry(QRect(0, 0, 200, 457));
        startButton = new QPushButton(step3);
        startButton->setObjectName(QStringLiteral("startButton"));
        startButton->setGeometry(QRect(20, 329, 81, 32));
        stopButton = new QPushButton(step3);
        stopButton->setObjectName(QStringLiteral("stopButton"));
        stopButton->setGeometry(QRect(110, 329, 81, 32));
        progressBar = new QProgressBar(step3);
        progressBar->setObjectName(QStringLiteral("progressBar"));
        progressBar->setGeometry(QRect(20, 450, 171, 23));
        progressBar->setValue(24);
        label_3 = new QLabel(step3);
        label_3->setObjectName(QStringLiteral("label_3"));
        label_3->setGeometry(QRect(10, 420, 62, 16));
        LSStatus = new QLabel(step3);
        LSStatus->setObjectName(QStringLiteral("LSStatus"));
        LSStatus->setGeometry(QRect(72, 418, 121, 20));
        nextstepBotton3 = new QPushButton(step3);
        nextstepBotton3->setObjectName(QStringLiteral("nextstepBotton3"));
        nextstepBotton3->setGeometry(QRect(100, 510, 101, 32));
        prestepButton3 = new QPushButton(step3);
        prestepButton3->setObjectName(QStringLiteral("prestepButton3"));
        prestepButton3->setGeometry(QRect(0, 510, 101, 32));
        levelSetTabWidget = new QTabWidget(step3);
        levelSetTabWidget->setObjectName(QStringLiteral("levelSetTabWidget"));
        levelSetTabWidget->setGeometry(QRect(10, 20, 191, 251));
        parameterTab = new QWidget();
        parameterTab->setObjectName(QStringLiteral("parameterTab"));
        lowerThresholdSlider = new QSlider(parameterTab);
        lowerThresholdSlider->setObjectName(QStringLiteral("lowerThresholdSlider"));
        lowerThresholdSlider->setGeometry(QRect(11, 30, 160, 22));
        lowerThresholdSlider->setMinimum(-1200);
        lowerThresholdSlider->setMaximum(2000);
        lowerThresholdSlider->setValue(200);
        lowerThresholdSlider->setOrientation(Qt::Horizontal);
        lowerThresholdSlider->setTickPosition(QSlider::TicksBelow);
        lowerThresholdSlider->setTickInterval(20);
        label_5 = new QLabel(parameterTab);
        label_5->setObjectName(QStringLiteral("label_5"));
        label_5->setGeometry(QRect(0, 10, 111, 16));
        lowerThresholdSpin = new QSpinBox(parameterTab);
        lowerThresholdSpin->setObjectName(QStringLiteral("lowerThresholdSpin"));
        lowerThresholdSpin->setGeometry(QRect(126, 5, 57, 25));
        lowerThresholdSpin->setMinimum(-1200);
        lowerThresholdSpin->setMaximum(2000);
        lowerThresholdSpin->setValue(200);
        upperThresholdSlider = new QSlider(parameterTab);
        upperThresholdSlider->setObjectName(QStringLiteral("upperThresholdSlider"));
        upperThresholdSlider->setGeometry(QRect(8, 96, 160, 22));
        upperThresholdSlider->setMinimum(-1200);
        upperThresholdSlider->setMaximum(2000);
        upperThresholdSlider->setValue(500);
        upperThresholdSlider->setOrientation(Qt::Horizontal);
        upperThresholdSlider->setTickPosition(QSlider::TicksBelow);
        upperThresholdSlider->setTickInterval(20);
        upperThresholdSpin = new QSpinBox(parameterTab);
        upperThresholdSpin->setObjectName(QStringLiteral("upperThresholdSpin"));
        upperThresholdSpin->setGeometry(QRect(125, 66, 57, 25));
        upperThresholdSpin->setMinimum(-1200);
        upperThresholdSpin->setMaximum(2000);
        upperThresholdSpin->setValue(500);
        label_4 = new QLabel(parameterTab);
        label_4->setObjectName(QStringLiteral("label_4"));
        label_4->setGeometry(QRect(0, 71, 111, 16));
        smoothFactorSlider = new QSlider(parameterTab);
        smoothFactorSlider->setObjectName(QStringLiteral("smoothFactorSlider"));
        smoothFactorSlider->setGeometry(QRect(7, 170, 161, 22));
        smoothFactorSlider->setMinimum(1);
        smoothFactorSlider->setMaximum(99);
        smoothFactorSlider->setValue(50);
        smoothFactorSlider->setOrientation(Qt::Horizontal);
        smoothFactorSlider->setTickPosition(QSlider::TicksBelow);
        smoothFactorSlider->setTickInterval(20);
        smoothFactorSpin = new QDoubleSpinBox(parameterTab);
        smoothFactorSpin->setObjectName(QStringLiteral("smoothFactorSpin"));
        smoothFactorSpin->setGeometry(QRect(120, 141, 62, 25));
        smoothFactorSpin->setMinimum(0.01);
        smoothFactorSpin->setMaximum(0.99);
        smoothFactorSpin->setSingleStep(0.01);
        smoothFactorSpin->setValue(0.5);
        label_6 = new QLabel(parameterTab);
        label_6->setObjectName(QStringLiteral("label_6"));
        label_6->setGeometry(QRect(0, 145, 111, 16));
        levelSetTabWidget->addTab(parameterTab, QString());
        blockerTab = new QWidget();
        blockerTab->setObjectName(QStringLiteral("blockerTab"));
        stopMarkerListView_2 = new listViewWithKeyBoardSupport(blockerTab);
        stopMarkerListView_2->setObjectName(QStringLiteral("stopMarkerListView_2"));
        stopMarkerListView_2->setGeometry(QRect(10, 29, 161, 111));
        stopMarkerListView_2->setFocusPolicy(Qt::WheelFocus);
        label_12 = new QLabel(blockerTab);
        label_12->setObjectName(QStringLiteral("label_12"));
        label_12->setGeometry(QRect(20, 9, 81, 16));
        label_13 = new QLabel(blockerTab);
        label_13->setObjectName(QStringLiteral("label_13"));
        label_13->setGeometry(QRect(4, 150, 181, 61));
        label_13->setWordWrap(true);
        levelSetTabWidget->addTab(blockerTab, QString());
        blockerEditCheckBox = new QCheckBox(step3);
        blockerEditCheckBox->setObjectName(QStringLiteral("blockerEditCheckBox"));
        blockerEditCheckBox->setGeometry(QRect(20, 280, 171, 20));
        maxiterationSpinBox = new QSpinBox(step3);
        maxiterationSpinBox->setObjectName(QStringLiteral("maxiterationSpinBox"));
        maxiterationSpinBox->setGeometry(QRect(20, 300, 57, 25));
        maxiterationSpinBox->setMaximum(100000);
        maxiterationSpinBox->setValue(100);
        multi_Resolution_CheckBox = new QCheckBox(step3);
        multi_Resolution_CheckBox->setObjectName(QStringLiteral("multi_Resolution_CheckBox"));
        multi_Resolution_CheckBox->setGeometry(QRect(20, 370, 121, 20));
        multi_Resolution_CheckBox->setChecked(false);
        speedBoostingHelpButton = new QPushButton(step3);
        speedBoostingHelpButton->setObjectName(QStringLiteral("speedBoostingHelpButton"));
        speedBoostingHelpButton->setGeometry(QRect(160, 370, 21, 21));
        toolBox->addItem(step3, QStringLiteral("step 3: Segmenting"));
        step4 = new QWidget();
        step4->setObjectName(QStringLiteral("step4"));
        step4->setGeometry(QRect(0, 0, 200, 457));
        saveButton = new QPushButton(step4);
        saveButton->setObjectName(QStringLiteral("saveButton"));
        saveButton->setGeometry(QRect(40, 330, 114, 32));
        saveSTLButton = new QPushButton(step4);
        saveSTLButton->setObjectName(QStringLiteral("saveSTLButton"));
        saveSTLButton->setGeometry(QRect(40, 370, 114, 32));
        prestepButton4 = new QPushButton(step4);
        prestepButton4->setObjectName(QStringLiteral("prestepButton4"));
        prestepButton4->setGeometry(QRect(10, 480, 101, 32));
        label_14 = new QLabel(step4);
        label_14->setObjectName(QStringLiteral("label_14"));
        label_14->setGeometry(QRect(20, 10, 62, 16));
        resultSummary = new QTextBrowser(step4);
        resultSummary->setObjectName(QStringLiteral("resultSummary"));
        resultSummary->setGeometry(QRect(20, 40, 161, 201));
        gobackOsiriX = new QPushButton(step4);
        gobackOsiriX->setObjectName(QStringLiteral("gobackOsiriX"));
        gobackOsiriX->setGeometry(QRect(40, 410, 114, 32));
        saveTextButton = new QPushButton(step4);
        saveTextButton->setObjectName(QStringLiteral("saveTextButton"));
        saveTextButton->setGeometry(QRect(40, 440, 114, 32));
        smoothingIterationSpinBox = new QSpinBox(step4);
        smoothingIterationSpinBox->setObjectName(QStringLiteral("smoothingIterationSpinBox"));
        smoothingIterationSpinBox->setGeometry(QRect(116, 290, 51, 24));
        smoothingIterationSpinBox->setMaximum(500);
        smoothingIterationSpinBox->setValue(10);
        label_15 = new QLabel(step4);
        label_15->setObjectName(QStringLiteral("label_15"));
        label_15->setGeometry(QRect(30, 270, 131, 16));
        toolBox->addItem(step4, QStringLiteral("Step 4: Saving Results"));
        VesselAnalysisPage = new QWidget();
        VesselAnalysisPage->setObjectName(QStringLiteral("VesselAnalysisPage"));
        VesselAnalysisPage->setGeometry(QRect(0, 0, 200, 457));
        startVesselAnalysisButton = new QPushButton(VesselAnalysisPage);
        startVesselAnalysisButton->setObjectName(QStringLiteral("startVesselAnalysisButton"));
        startVesselAnalysisButton->setGeometry(QRect(10, 320, 81, 32));
        loadVesselCenterlineButton = new QPushButton(VesselAnalysisPage);
        loadVesselCenterlineButton->setObjectName(QStringLiteral("loadVesselCenterlineButton"));
        loadVesselCenterlineButton->setGeometry(QRect(20, 10, 161, 32));
        stopVesselAnalysisButton = new QPushButton(VesselAnalysisPage);
        stopVesselAnalysisButton->setObjectName(QStringLiteral("stopVesselAnalysisButton"));
        stopVesselAnalysisButton->setGeometry(QRect(90, 320, 91, 32));
        label_16 = new QLabel(VesselAnalysisPage);
        label_16->setObjectName(QStringLiteral("label_16"));
        label_16->setGeometry(QRect(3, 211, 141, 16));
        smoothFactorSlider_2 = new QSlider(VesselAnalysisPage);
        smoothFactorSlider_2->setObjectName(QStringLiteral("smoothFactorSlider_2"));
        smoothFactorSlider_2->setGeometry(QRect(20, 240, 161, 22));
        smoothFactorSlider_2->setMinimum(1);
        smoothFactorSlider_2->setMaximum(99);
        smoothFactorSlider_2->setValue(50);
        smoothFactorSlider_2->setOrientation(Qt::Horizontal);
        smoothFactorSlider_2->setTickPosition(QSlider::TicksBelow);
        smoothFactorSlider_2->setTickInterval(20);
        smoothFactorSpin_2 = new QDoubleSpinBox(VesselAnalysisPage);
        smoothFactorSpin_2->setObjectName(QStringLiteral("smoothFactorSpin_2"));
        smoothFactorSpin_2->setGeometry(QRect(133, 211, 62, 25));
        smoothFactorSpin_2->setMinimum(0.01);
        smoothFactorSpin_2->setMaximum(0.99);
        smoothFactorSpin_2->setSingleStep(0.01);
        smoothFactorSpin_2->setValue(0.5);
        exportVesselAnalysisButton = new QPushButton(VesselAnalysisPage);
        exportVesselAnalysisButton->setObjectName(QStringLiteral("exportVesselAnalysisButton"));
        exportVesselAnalysisButton->setGeometry(QRect(50, 390, 141, 32));
        loadRawButton = new QPushButton(VesselAnalysisPage);
        loadRawButton->setObjectName(QStringLiteral("loadRawButton"));
        loadRawButton->setGeometry(QRect(0, 390, 91, 32));
        exportVTKButton = new QPushButton(VesselAnalysisPage);
        exportVTKButton->setObjectName(QStringLiteral("exportVTKButton"));
        exportVTKButton->setGeometry(QRect(30, 440, 141, 32));
        upperThresholdSpin_4 = new QSpinBox(VesselAnalysisPage);
        upperThresholdSpin_4->setObjectName(QStringLiteral("upperThresholdSpin_4"));
        upperThresholdSpin_4->setGeometry(QRect(139, 151, 57, 25));
        upperThresholdSpin_4->setMinimum(-1200);
        upperThresholdSpin_4->setMaximum(2000);
        upperThresholdSpin_4->setValue(650);
        label_17 = new QLabel(VesselAnalysisPage);
        label_17->setObjectName(QStringLiteral("label_17"));
        label_17->setGeometry(QRect(14, 95, 111, 16));
        label_22 = new QLabel(VesselAnalysisPage);
        label_22->setObjectName(QStringLiteral("label_22"));
        label_22->setGeometry(QRect(14, 156, 111, 16));
        lowerThresholdSlider_4 = new QSlider(VesselAnalysisPage);
        lowerThresholdSlider_4->setObjectName(QStringLiteral("lowerThresholdSlider_4"));
        lowerThresholdSlider_4->setGeometry(QRect(25, 115, 160, 22));
        lowerThresholdSlider_4->setMinimum(-1200);
        lowerThresholdSlider_4->setMaximum(2000);
        lowerThresholdSlider_4->setValue(150);
        lowerThresholdSlider_4->setOrientation(Qt::Horizontal);
        lowerThresholdSlider_4->setTickPosition(QSlider::TicksBelow);
        lowerThresholdSlider_4->setTickInterval(20);
        upperThresholdSlider_4 = new QSlider(VesselAnalysisPage);
        upperThresholdSlider_4->setObjectName(QStringLiteral("upperThresholdSlider_4"));
        upperThresholdSlider_4->setGeometry(QRect(22, 181, 160, 22));
        upperThresholdSlider_4->setMinimum(-1200);
        upperThresholdSlider_4->setMaximum(2000);
        upperThresholdSlider_4->setValue(650);
        upperThresholdSlider_4->setOrientation(Qt::Horizontal);
        upperThresholdSlider_4->setTickPosition(QSlider::TicksBelow);
        upperThresholdSlider_4->setTickInterval(20);
        lowerThresholdSpin_4 = new QSpinBox(VesselAnalysisPage);
        lowerThresholdSpin_4->setObjectName(QStringLiteral("lowerThresholdSpin_4"));
        lowerThresholdSpin_4->setGeometry(QRect(140, 90, 57, 25));
        lowerThresholdSpin_4->setMinimum(-1200);
        lowerThresholdSpin_4->setMaximum(2000);
        lowerThresholdSpin_4->setValue(150);
        vesselProgressBar = new QProgressBar(VesselAnalysisPage);
        vesselProgressBar->setObjectName(QStringLiteral("vesselProgressBar"));
        vesselProgressBar->setGeometry(QRect(10, 280, 171, 23));
        vesselProgressBar->setValue(24);
        vesselStatusLabel = new QLabel(VesselAnalysisPage);
        vesselStatusLabel->setObjectName(QStringLiteral("vesselStatusLabel"));
        vesselStatusLabel->setGeometry(QRect(10, 300, 171, 20));
        exportCrossSectionButton = new QPushButton(VesselAnalysisPage);
        exportCrossSectionButton->setObjectName(QStringLiteral("exportCrossSectionButton"));
        exportCrossSectionButton->setGeometry(QRect(0, 460, 191, 32));
        loadCrossSectionButton = new QPushButton(VesselAnalysisPage);
        loadCrossSectionButton->setObjectName(QStringLiteral("loadCrossSectionButton"));
        loadCrossSectionButton->setGeometry(QRect(0, 420, 191, 30));
        loadCrossSectionButton->setAutoExclusive(true);
        initializeVesselCenterlineButton = new QPushButton(VesselAnalysisPage);
        initializeVesselCenterlineButton->setObjectName(QStringLiteral("initializeVesselCenterlineButton"));
        initializeVesselCenterlineButton->setGeometry(QRect(20, 50, 161, 32));
        viewImageSourceVesselAnalyssisComboBox = new QComboBox(VesselAnalysisPage);
        viewImageSourceVesselAnalyssisComboBox->setObjectName(QStringLiteral("viewImageSourceVesselAnalyssisComboBox"));
        viewImageSourceVesselAnalyssisComboBox->setGeometry(QRect(30, 360, 111, 26));
        toolBox->addItem(VesselAnalysisPage, QStringLiteral("Vessel Analysis"));
        InteracitveSegmentationPage = new QWidget();
        InteracitveSegmentationPage->setObjectName(QStringLiteral("InteracitveSegmentationPage"));
        InteracitveSegmentationPage->setGeometry(QRect(0, 0, 200, 457));
        groupBox = new QGroupBox(InteracitveSegmentationPage);
        groupBox->setObjectName(QStringLiteral("groupBox"));
        groupBox->setGeometry(QRect(10, 30, 191, 51));
        setToAddingRadio = new QRadioButton(groupBox);
        setToAddingRadio->setObjectName(QStringLiteral("setToAddingRadio"));
        setToAddingRadio->setGeometry(QRect(10, 20, 71, 20));
        setToAddingRadio->setChecked(true);
        setToRemovingRadio = new QRadioButton(groupBox);
        setToRemovingRadio->setObjectName(QStringLiteral("setToRemovingRadio"));
        setToRemovingRadio->setGeometry(QRect(100, 20, 71, 20));
        interactiveSegmentParameterGroupBox = new QGroupBox(InteracitveSegmentationPage);
        interactiveSegmentParameterGroupBox->setObjectName(QStringLiteral("interactiveSegmentParameterGroupBox"));
        interactiveSegmentParameterGroupBox->setGeometry(QRect(10, 220, 191, 241));
        smoothFactorSlider_3 = new QSlider(interactiveSegmentParameterGroupBox);
        smoothFactorSlider_3->setObjectName(QStringLiteral("smoothFactorSlider_3"));
        smoothFactorSlider_3->setGeometry(QRect(10, 210, 161, 22));
        smoothFactorSlider_3->setMinimum(1);
        smoothFactorSlider_3->setMaximum(99);
        smoothFactorSlider_3->setValue(50);
        smoothFactorSlider_3->setOrientation(Qt::Horizontal);
        smoothFactorSlider_3->setTickPosition(QSlider::TicksBelow);
        smoothFactorSlider_3->setTickInterval(20);
        upperThresholdSlider_3 = new QSlider(interactiveSegmentParameterGroupBox);
        upperThresholdSlider_3->setObjectName(QStringLiteral("upperThresholdSlider_3"));
        upperThresholdSlider_3->setEnabled(false);
        upperThresholdSlider_3->setGeometry(QRect(11, 140, 160, 22));
        upperThresholdSlider_3->setMinimum(-1200);
        upperThresholdSlider_3->setMaximum(2000);
        upperThresholdSlider_3->setValue(500);
        upperThresholdSlider_3->setOrientation(Qt::Horizontal);
        upperThresholdSlider_3->setTickPosition(QSlider::TicksBelow);
        upperThresholdSlider_3->setTickInterval(20);
        lowerThresholdSlider_3 = new QSlider(interactiveSegmentParameterGroupBox);
        lowerThresholdSlider_3->setObjectName(QStringLiteral("lowerThresholdSlider_3"));
        lowerThresholdSlider_3->setEnabled(false);
        lowerThresholdSlider_3->setGeometry(QRect(14, 80, 160, 22));
        lowerThresholdSlider_3->setMinimum(-1200);
        lowerThresholdSlider_3->setMaximum(2000);
        lowerThresholdSlider_3->setValue(200);
        lowerThresholdSlider_3->setOrientation(Qt::Horizontal);
        lowerThresholdSlider_3->setTickPosition(QSlider::TicksBelow);
        lowerThresholdSlider_3->setTickInterval(20);
        smoothFactorSpin_3 = new QDoubleSpinBox(interactiveSegmentParameterGroupBox);
        smoothFactorSpin_3->setObjectName(QStringLiteral("smoothFactorSpin_3"));
        smoothFactorSpin_3->setGeometry(QRect(123, 181, 62, 25));
        smoothFactorSpin_3->setMinimum(0.01);
        smoothFactorSpin_3->setMaximum(0.99);
        smoothFactorSpin_3->setSingleStep(0.01);
        smoothFactorSpin_3->setValue(0.5);
        lowerThresholdSpin_3 = new QSpinBox(interactiveSegmentParameterGroupBox);
        lowerThresholdSpin_3->setObjectName(QStringLiteral("lowerThresholdSpin_3"));
        lowerThresholdSpin_3->setEnabled(false);
        lowerThresholdSpin_3->setGeometry(QRect(129, 55, 57, 25));
        lowerThresholdSpin_3->setMinimum(-1200);
        lowerThresholdSpin_3->setMaximum(2000);
        lowerThresholdSpin_3->setValue(200);
        label_20 = new QLabel(interactiveSegmentParameterGroupBox);
        label_20->setObjectName(QStringLiteral("label_20"));
        label_20->setGeometry(QRect(3, 185, 111, 16));
        upperThresholdSpin_3 = new QSpinBox(interactiveSegmentParameterGroupBox);
        upperThresholdSpin_3->setObjectName(QStringLiteral("upperThresholdSpin_3"));
        upperThresholdSpin_3->setEnabled(false);
        upperThresholdSpin_3->setGeometry(QRect(128, 110, 57, 25));
        upperThresholdSpin_3->setMinimum(-1200);
        upperThresholdSpin_3->setMaximum(2000);
        upperThresholdSpin_3->setValue(500);
        label_18 = new QLabel(interactiveSegmentParameterGroupBox);
        label_18->setObjectName(QStringLiteral("label_18"));
        label_18->setGeometry(QRect(3, 115, 111, 16));
        label_19 = new QLabel(interactiveSegmentParameterGroupBox);
        label_19->setObjectName(QStringLiteral("label_19"));
        label_19->setGeometry(QRect(3, 60, 111, 16));
        usingAutomaticThresholdButton = new QCheckBox(interactiveSegmentParameterGroupBox);
        usingAutomaticThresholdButton->setObjectName(QStringLiteral("usingAutomaticThresholdButton"));
        usingAutomaticThresholdButton->setGeometry(QRect(0, 30, 191, 20));
        usingAutomaticThresholdButton->setChecked(true);
        showAdvancedSettingsForInteractiveSegButton = new QCheckBox(InteracitveSegmentationPage);
        showAdvancedSettingsForInteractiveSegButton->setObjectName(QStringLiteral("showAdvancedSettingsForInteractiveSegButton"));
        showAdvancedSettingsForInteractiveSegButton->setGeometry(QRect(10, 207, 181, 20));
        resultSummary_2 = new QTextBrowser(InteracitveSegmentationPage);
        resultSummary_2->setObjectName(QStringLiteral("resultSummary_2"));
        resultSummary_2->setGeometry(QRect(20, 102, 171, 101));
        label_21 = new QLabel(InteracitveSegmentationPage);
        label_21->setObjectName(QStringLiteral("label_21"));
        label_21->setGeometry(QRect(30, 82, 62, 16));
        resetButton = new QPushButton(InteracitveSegmentationPage);
        resetButton->setObjectName(QStringLiteral("resetButton"));
        resetButton->setGeometry(QRect(110, 4, 81, 21));
        saveButton_interactive = new QPushButton(InteracitveSegmentationPage);
        saveButton_interactive->setObjectName(QStringLiteral("saveButton_interactive"));
        saveButton_interactive->setGeometry(QRect(10, 490, 181, 32));
        undoButton = new QPushButton(InteracitveSegmentationPage);
        undoButton->setObjectName(QStringLiteral("undoButton"));
        undoButton->setGeometry(QRect(10, 5, 81, 21));
        gobackOsiriX2 = new QPushButton(InteracitveSegmentationPage);
        gobackOsiriX2->setObjectName(QStringLiteral("gobackOsiriX2"));
        gobackOsiriX2->setGeometry(QRect(10, 520, 181, 32));
        saveTextButton_2 = new QPushButton(InteracitveSegmentationPage);
        saveTextButton_2->setObjectName(QStringLiteral("saveTextButton_2"));
        saveTextButton_2->setGeometry(QRect(10, 460, 181, 32));
        toolBox->addItem(InteracitveSegmentationPage, QStringLiteral("Interactive segmentation"));
        RegistrationPage = new QWidget();
        RegistrationPage->setObjectName(QStringLiteral("RegistrationPage"));
        RegistrationPage->setGeometry(QRect(0, 0, 200, 457));
        startRegistrationButton = new QPushButton(RegistrationPage);
        startRegistrationButton->setObjectName(QStringLiteral("startRegistrationButton"));
        startRegistrationButton->setGeometry(QRect(20, 30, 114, 32));
        openMovingImageButton = new QPushButton(RegistrationPage);
        openMovingImageButton->setObjectName(QStringLiteral("openMovingImageButton"));
        openMovingImageButton->setGeometry(QRect(20, 0, 114, 32));
        resetRegistrationButton = new QPushButton(RegistrationPage);
        resetRegistrationButton->setObjectName(QStringLiteral("resetRegistrationButton"));
        resetRegistrationButton->setGeometry(QRect(20, 60, 114, 32));
        viewImageSource = new QComboBox(RegistrationPage);
        viewImageSource->setObjectName(QStringLiteral("viewImageSource"));
        viewImageSource->setGeometry(QRect(30, 290, 111, 26));
        saveRegistrationButton = new QPushButton(RegistrationPage);
        saveRegistrationButton->setObjectName(QStringLiteral("saveRegistrationButton"));
        saveRegistrationButton->setGeometry(QRect(20, 350, 141, 32));
        loadRegistrationButton = new QPushButton(RegistrationPage);
        loadRegistrationButton->setObjectName(QStringLiteral("loadRegistrationButton"));
        loadRegistrationButton->setGeometry(QRect(20, 390, 141, 32));
        modelMaskCheckBox = new QCheckBox(RegistrationPage);
        modelMaskCheckBox->setObjectName(QStringLiteral("modelMaskCheckBox"));
        modelMaskCheckBox->setGeometry(QRect(30, 220, 161, 20));
        modelMaskCheckBox->setChecked(true);
        levesSetMaskCheckBox = new QCheckBox(RegistrationPage);
        levesSetMaskCheckBox->setObjectName(QStringLiteral("levesSetMaskCheckBox"));
        levesSetMaskCheckBox->setGeometry(QRect(30, 250, 161, 20));
        levesSetMaskCheckBox->setChecked(true);
        saveRegistrationResultButton = new QPushButton(RegistrationPage);
        saveRegistrationResultButton->setObjectName(QStringLiteral("saveRegistrationResultButton"));
        saveRegistrationResultButton->setGeometry(QRect(20, 430, 141, 32));
        saveSegmentationResultButton = new QPushButton(RegistrationPage);
        saveSegmentationResultButton->setObjectName(QStringLiteral("saveSegmentationResultButton"));
        saveSegmentationResultButton->setGeometry(QRect(20, 460, 141, 32));
        translationLineEdit = new QLineEdit(RegistrationPage);
        translationLineEdit->setObjectName(QStringLiteral("translationLineEdit"));
        translationLineEdit->setEnabled(false);
        translationLineEdit->setGeometry(QRect(80, 100, 81, 22));
        label_24 = new QLabel(RegistrationPage);
        label_24->setObjectName(QStringLiteral("label_24"));
        label_24->setEnabled(false);
        label_24->setGeometry(QRect(10, 100, 62, 16));
        rotationLineEdit = new QLineEdit(RegistrationPage);
        rotationLineEdit->setObjectName(QStringLiteral("rotationLineEdit"));
        rotationLineEdit->setEnabled(false);
        rotationLineEdit->setGeometry(QRect(80, 130, 81, 22));
        label_25 = new QLabel(RegistrationPage);
        label_25->setObjectName(QStringLiteral("label_25"));
        label_25->setEnabled(false);
        label_25->setGeometry(QRect(10, 130, 62, 16));
        label_26 = new QLabel(RegistrationPage);
        label_26->setObjectName(QStringLiteral("label_26"));
        label_26->setEnabled(false);
        label_26->setGeometry(QRect(10, 160, 62, 16));
        scalingLineEdit = new QLineEdit(RegistrationPage);
        scalingLineEdit->setObjectName(QStringLiteral("scalingLineEdit"));
        scalingLineEdit->setEnabled(false);
        scalingLineEdit->setGeometry(QRect(80, 160, 81, 22));
        mappingLineEdit = new QLineEdit(RegistrationPage);
        mappingLineEdit->setObjectName(QStringLiteral("mappingLineEdit"));
        mappingLineEdit->setEnabled(false);
        mappingLineEdit->setGeometry(QRect(80, 190, 81, 22));
        label_27 = new QLabel(RegistrationPage);
        label_27->setObjectName(QStringLiteral("label_27"));
        label_27->setEnabled(false);
        label_27->setGeometry(QRect(10, 190, 62, 16));
        openWeightingImageButton = new QPushButton(RegistrationPage);
        openWeightingImageButton->setObjectName(QStringLiteral("openWeightingImageButton"));
        openWeightingImageButton->setGeometry(QRect(20, 320, 141, 32));
        phaseSelectionButton = new QComboBox(RegistrationPage);
        phaseSelectionButton->setObjectName(QStringLiteral("phaseSelectionButton"));
        phaseSelectionButton->setGeometry(QRect(40, 500, 111, 26));
        toolBox->addItem(RegistrationPage, QStringLiteral("Registration"));
        brainSegmentationPage = new QWidget();
        brainSegmentationPage->setObjectName(QStringLiteral("brainSegmentationPage"));
        brainSegmentationPage->setGeometry(QRect(0, 0, 200, 457));
        startWMSegmentationButton = new QPushButton(brainSegmentationPage);
        startWMSegmentationButton->setObjectName(QStringLiteral("startWMSegmentationButton"));
        startWMSegmentationButton->setGeometry(QRect(10, 0, 81, 32));
        startGMSegmentationButton = new QPushButton(brainSegmentationPage);
        startGMSegmentationButton->setObjectName(QStringLiteral("startGMSegmentationButton"));
        startGMSegmentationButton->setGeometry(QRect(100, 0, 81, 32));
        saveBrainResultButton = new QPushButton(brainSegmentationPage);
        saveBrainResultButton->setObjectName(QStringLiteral("saveBrainResultButton"));
        saveBrainResultButton->setGeometry(QRect(40, 460, 114, 32));
        creatSurfaceModelButton = new QPushButton(brainSegmentationPage);
        creatSurfaceModelButton->setObjectName(QStringLiteral("creatSurfaceModelButton"));
        creatSurfaceModelButton->setGeometry(QRect(40, 30, 114, 32));
        viewImageSourceComboBox = new QComboBox(brainSegmentationPage);
        viewImageSourceComboBox->setObjectName(QStringLiteral("viewImageSourceComboBox"));
        viewImageSourceComboBox->setGeometry(QRect(40, 150, 111, 26));
        whiteMatterMaskCheckBox = new QCheckBox(brainSegmentationPage);
        whiteMatterMaskCheckBox->setObjectName(QStringLiteral("whiteMatterMaskCheckBox"));
        whiteMatterMaskCheckBox->setGeometry(QRect(40, 190, 111, 20));
        whiteMatterMaskCheckBox->setChecked(true);
        grayMatterMaskCheckBox = new QCheckBox(brainSegmentationPage);
        grayMatterMaskCheckBox->setObjectName(QStringLiteral("grayMatterMaskCheckBox"));
        grayMatterMaskCheckBox->setGeometry(QRect(40, 220, 131, 20));
        grayMatterMaskCheckBox->setChecked(true);
        surfaceModelMaskCheckBox = new QCheckBox(brainSegmentationPage);
        surfaceModelMaskCheckBox->setObjectName(QStringLiteral("surfaceModelMaskCheckBox"));
        surfaceModelMaskCheckBox->setGeometry(QRect(40, 250, 131, 20));
        surfaceModelMaskCheckBox->setChecked(true);
        LSStatus_BrainPage = new QLabel(brainSegmentationPage);
        LSStatus_BrainPage->setObjectName(QStringLiteral("LSStatus_BrainPage"));
        LSStatus_BrainPage->setGeometry(QRect(72, 338, 121, 20));
        progressBar_BrainPage = new QProgressBar(brainSegmentationPage);
        progressBar_BrainPage->setObjectName(QStringLiteral("progressBar_BrainPage"));
        progressBar_BrainPage->setGeometry(QRect(20, 370, 171, 23));
        progressBar_BrainPage->setValue(24);
        label_23 = new QLabel(brainSegmentationPage);
        label_23->setObjectName(QStringLiteral("label_23"));
        label_23->setGeometry(QRect(10, 340, 62, 16));
        applySurfaceModelButton = new QPushButton(brainSegmentationPage);
        applySurfaceModelButton->setObjectName(QStringLiteral("applySurfaceModelButton"));
        applySurfaceModelButton->setGeometry(QRect(40, 60, 114, 32));
        toolBox->addItem(brainSegmentationPage, QStringLiteral("Brain Segmentation"));
        randomForestTrainingPage = new QWidget();
        randomForestTrainingPage->setObjectName(QStringLiteral("randomForestTrainingPage"));
        randomForestTrainingPage->setGeometry(QRect(0, 0, 200, 457));
        trainingImageListView = new QListView(randomForestTrainingPage);
        trainingImageListView->setObjectName(QStringLiteral("trainingImageListView"));
        trainingImageListView->setGeometry(QRect(0, 70, 181, 181));
        gotoPreviousTrainingImageButton = new QPushButton(randomForestTrainingPage);
        gotoPreviousTrainingImageButton->setObjectName(QStringLiteral("gotoPreviousTrainingImageButton"));
        gotoPreviousTrainingImageButton->setGeometry(QRect(0, 250, 81, 32));
        gotoNextTrainingImageButton = new QPushButton(randomForestTrainingPage);
        gotoNextTrainingImageButton->setObjectName(QStringLiteral("gotoNextTrainingImageButton"));
        gotoNextTrainingImageButton->setGeometry(QRect(100, 250, 81, 32));
        addTrainningImageButton = new QPushButton(randomForestTrainingPage);
        addTrainningImageButton->setObjectName(QStringLiteral("addTrainningImageButton"));
        addTrainningImageButton->setGeometry(QRect(120, 30, 41, 32));
        label_28 = new QLabel(randomForestTrainingPage);
        label_28->setObjectName(QStringLiteral("label_28"));
        label_28->setGeometry(QRect(10, 36, 101, 21));
        saveTrainingSettingButton = new QPushButton(randomForestTrainingPage);
        saveTrainingSettingButton->setObjectName(QStringLiteral("saveTrainingSettingButton"));
        saveTrainingSettingButton->setGeometry(QRect(0, 0, 81, 32));
        trainingMarkerListView = new listViewWithKeyBoardSupport(randomForestTrainingPage);
        trainingMarkerListView->setObjectName(QStringLiteral("trainingMarkerListView"));
        trainingMarkerListView->setGeometry(QRect(3, 310, 171, 81));
        trainingMarkerListView->setFocusPolicy(Qt::WheelFocus);
        loadTrainingSettingButton = new QPushButton(randomForestTrainingPage);
        loadTrainingSettingButton->setObjectName(QStringLiteral("loadTrainingSettingButton"));
        loadTrainingSettingButton->setGeometry(QRect(90, 0, 81, 32));
        label_29 = new QLabel(randomForestTrainingPage);
        label_29->setObjectName(QStringLiteral("label_29"));
        label_29->setGeometry(QRect(10, 290, 101, 21));
        startTrainingButton = new QPushButton(randomForestTrainingPage);
        startTrainingButton->setObjectName(QStringLiteral("startTrainingButton"));
        startTrainingButton->setGeometry(QRect(0, 390, 171, 32));
        saveTrainedForest = new QPushButton(randomForestTrainingPage);
        saveTrainedForest->setObjectName(QStringLiteral("saveTrainedForest"));
        saveTrainedForest->setGeometry(QRect(0, 420, 81, 32));
        loadTrainedForest = new QPushButton(randomForestTrainingPage);
        loadTrainedForest->setObjectName(QStringLiteral("loadTrainedForest"));
        loadTrainedForest->setGeometry(QRect(90, 420, 81, 32));
        toolBox->addItem(randomForestTrainingPage, QStringLiteral("Training"));

        horizontalLayout->addWidget(toolBox);

        mPRSplitter = new QSplitter(centralWidget);
        mPRSplitter->setObjectName(QStringLiteral("mPRSplitter"));
        sizePolicy1.setHeightForWidth(mPRSplitter->sizePolicy().hasHeightForWidth());
        mPRSplitter->setSizePolicy(sizePolicy1);
        mPRSplitter->setMinimumSize(QSize(900, 600));
        mPRSplitter->setOrientation(Qt::Horizontal);
        layoutWidget = new QWidget(mPRSplitter);
        layoutWidget->setObjectName(QStringLiteral("layoutWidget"));
        gridLayout = new QGridLayout(layoutWidget);
        gridLayout->setSpacing(6);
        gridLayout->setContentsMargins(11, 11, 11, 11);
        gridLayout->setObjectName(QStringLiteral("gridLayout"));
        gridLayout->setContentsMargins(0, 0, 0, 0);
        leftUpperView = new MiaImageView2D(layoutWidget);
        leftUpperView->setObjectName(QStringLiteral("leftUpperView"));
        sizePolicy1.setHeightForWidth(leftUpperView->sizePolicy().hasHeightForWidth());
        leftUpperView->setSizePolicy(sizePolicy1);
        leftUpperView->setMinimumSize(QSize(300, 300));

        gridLayout->addWidget(leftUpperView, 0, 0, 1, 1);

        leftLowerView = new MiaImageView2D(layoutWidget);
        leftLowerView->setObjectName(QStringLiteral("leftLowerView"));
        sizePolicy1.setHeightForWidth(leftLowerView->sizePolicy().hasHeightForWidth());
        leftLowerView->setSizePolicy(sizePolicy1);
        leftLowerView->setMinimumSize(QSize(300, 300));

        gridLayout->addWidget(leftLowerView, 1, 0, 1, 1);

        rightLowerView = new MiaImageView3D(layoutWidget);
        rightLowerView->setObjectName(QStringLiteral("rightLowerView"));
        sizePolicy1.setHeightForWidth(rightLowerView->sizePolicy().hasHeightForWidth());
        rightLowerView->setSizePolicy(sizePolicy1);
        rightLowerView->setMinimumSize(QSize(300, 300));

        gridLayout->addWidget(rightLowerView, 1, 1, 1, 1);

        rightUpperView = new MiaImageView2D(layoutWidget);
        rightUpperView->setObjectName(QStringLiteral("rightUpperView"));
        sizePolicy1.setHeightForWidth(rightUpperView->sizePolicy().hasHeightForWidth());
        rightUpperView->setSizePolicy(sizePolicy1);
        rightUpperView->setMinimumSize(QSize(300, 300));

        gridLayout->addWidget(rightUpperView, 0, 1, 1, 1);

        mPRSplitter->addWidget(layoutWidget);
        stackedWidget = new QStackedWidget(mPRSplitter);
        stackedWidget->setObjectName(QStringLiteral("stackedWidget"));
        QSizePolicy sizePolicy3(QSizePolicy::Expanding, QSizePolicy::Expanding);
        sizePolicy3.setHorizontalStretch(1);
        sizePolicy3.setVerticalStretch(0);
        sizePolicy3.setHeightForWidth(stackedWidget->sizePolicy().hasHeightForWidth());
        stackedWidget->setSizePolicy(sizePolicy3);
        stackedWidget->setMinimumSize(QSize(300, 600));
        stackedWidget->setMaximumSize(QSize(16777215, 16777215));
        curvedMPRPage = new QWidget();
        curvedMPRPage->setObjectName(QStringLiteral("curvedMPRPage"));
        sizePolicy1.setHeightForWidth(curvedMPRPage->sizePolicy().hasHeightForWidth());
        curvedMPRPage->setSizePolicy(sizePolicy1);
        gridLayout_2 = new QGridLayout(curvedMPRPage);
        gridLayout_2->setSpacing(0);
        gridLayout_2->setContentsMargins(11, 11, 11, 11);
        gridLayout_2->setObjectName(QStringLiteral("gridLayout_2"));
        gridLayout_2->setContentsMargins(0, 0, 0, 0);
        widget = new QWidget(curvedMPRPage);
        widget->setObjectName(QStringLiteral("widget"));
        QSizePolicy sizePolicy4(QSizePolicy::Expanding, QSizePolicy::Preferred);
        sizePolicy4.setHorizontalStretch(0);
        sizePolicy4.setVerticalStretch(0);
        sizePolicy4.setHeightForWidth(widget->sizePolicy().hasHeightForWidth());
        widget->setSizePolicy(sizePolicy4);
        widget->setMinimumSize(QSize(0, 40));
        widget->setMaximumSize(QSize(16777215, 40));
        nextAngleButton = new QPushButton(widget);
        nextAngleButton->setObjectName(QStringLiteral("nextAngleButton"));
        nextAngleButton->setGeometry(QRect(0, 10, 151, 32));
        nextPositionButton = new QPushButton(widget);
        nextPositionButton->setObjectName(QStringLiteral("nextPositionButton"));
        nextPositionButton->setGeometry(QRect(160, 10, 151, 32));

        gridLayout_2->addWidget(widget, 0, 0, 1, 1);

        curvedMPRV = new MiaImageView2D(curvedMPRPage);
        curvedMPRV->setObjectName(QStringLiteral("curvedMPRV"));
        sizePolicy1.setHeightForWidth(curvedMPRV->sizePolicy().hasHeightForWidth());
        curvedMPRV->setSizePolicy(sizePolicy1);

        gridLayout_2->addWidget(curvedMPRV, 1, 0, 1, 1);

        stackedWidget->addWidget(curvedMPRPage);
        stackedWidgetPage2 = new QWidget();
        stackedWidgetPage2->setObjectName(QStringLiteral("stackedWidgetPage2"));
        sizePolicy1.setHeightForWidth(stackedWidgetPage2->sizePolicy().hasHeightForWidth());
        stackedWidgetPage2->setSizePolicy(sizePolicy1);
        stackedWidget->addWidget(stackedWidgetPage2);
        mPRSplitter->addWidget(stackedWidget);

        horizontalLayout->addWidget(mPRSplitter);

        MainWindow->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(MainWindow);
        menuBar->setObjectName(QStringLiteral("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 1204, 22));
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName(QStringLiteral("menuFile"));
        menuOpen = new QMenu(menuFile);
        menuOpen->setObjectName(QStringLiteral("menuOpen"));
        menuHelp = new QMenu(menuBar);
        menuHelp->setObjectName(QStringLiteral("menuHelp"));
        menuOperations = new QMenu(menuBar);
        menuOperations->setObjectName(QStringLiteral("menuOperations"));
        menuWorkFlow = new QMenu(menuBar);
        menuWorkFlow->setObjectName(QStringLiteral("menuWorkFlow"));
        MainWindow->setMenuBar(menuBar);
        mainToolBar = new QToolBar(MainWindow);
        mainToolBar->setObjectName(QStringLiteral("mainToolBar"));
        mainToolBar->setIconSize(QSize(50, 50));
        MainWindow->addToolBar(Qt::TopToolBarArea, mainToolBar);
        statusBar = new QStatusBar(MainWindow);
        statusBar->setObjectName(QStringLiteral("statusBar"));
        MainWindow->setStatusBar(statusBar);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuOperations->menuAction());
        menuBar->addAction(menuWorkFlow->menuAction());
        menuBar->addAction(menuHelp->menuAction());
        menuFile->addAction(menuOpen->menuAction());
        menuOpen->addAction(actionOpen_mhd_file);
        menuOpen->addAction(actionOpen_Nifti_file);
        menuOpen->addAction(actionOpen_VTK_file);
        menuOpen->addAction(actionOpen_DICOM_folder);
        menuOpen->addAction(actionOpen_2D_image);
        menuHelp->addAction(actionOnline_Tutorial);
        menuHelp->addAction(actionAbout_MiaLite);
        menuOperations->addAction(actionThresholdBasedSegmentation);
        menuOperations->addAction(actionClickDragInteractiveSegmentation);
        menuOperations->addAction(actionModelBasedSegmentation);
        menuOperations->addAction(actionRegistration);
        menuOperations->addAction(actionModelBasedMethod);
        menuOperations->addAction(actionVesselAnalysis);
        menuOperations->addAction(actionLiverSegmentMarking);
        menuOperations->addAction(actionBodyPartDetectorTraining);
        menuOperations->addAction(actionBodyPartDetection);
        menuOperations->addAction(actionFuzzyConnectednessSegmentation);
        menuOperations->addAction(actionMulti_seed_vessel_segmentation);
        menuWorkFlow->addAction(actionBrainSegmentation);
        menuWorkFlow->addAction(actionLeftVentricleSegmentation);
        menuWorkFlow->addAction(actionBoneSegmentationPrinting);
        mainToolBar->addAction(actionWindow_Setting);
        mainToolBar->addAction(actionPan);
        mainToolBar->addAction(actionZoom);
        mainToolBar->addAction(actionCurve_ROI);
        mainToolBar->addSeparator();
        mainToolBar->addAction(actionAbout_MiaLite);

        retranslateUi(MainWindow);
        QObject::connect(lowerThresholdSlider, SIGNAL(valueChanged(int)), lowerThresholdSpin, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSpin, SIGNAL(valueChanged(int)), lowerThresholdSlider, SLOT(setValue(int)));
        QObject::connect(upperThresholdSlider_2, SIGNAL(valueChanged(int)), upperThresholdSpin_2, SLOT(setValue(int)));
        QObject::connect(upperThresholdSpin_2, SIGNAL(valueChanged(int)), upperThresholdSlider_2, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSlider_2, SIGNAL(valueChanged(int)), lowerThresholdSpin_2, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSpin_2, SIGNAL(valueChanged(int)), lowerThresholdSlider_2, SLOT(setValue(int)));
        QObject::connect(upperThresholdSlider, SIGNAL(valueChanged(int)), upperThresholdSpin, SLOT(setValue(int)));
        QObject::connect(upperThresholdSpin, SIGNAL(valueChanged(int)), upperThresholdSlider, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSlider_3, SIGNAL(valueChanged(int)), lowerThresholdSpin_3, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSpin_3, SIGNAL(valueChanged(int)), lowerThresholdSlider_3, SLOT(setValue(int)));
        QObject::connect(upperThresholdSlider_3, SIGNAL(valueChanged(int)), upperThresholdSpin_3, SLOT(setValue(int)));
        QObject::connect(upperThresholdSpin_3, SIGNAL(valueChanged(int)), upperThresholdSlider_3, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSlider_4, SIGNAL(valueChanged(int)), lowerThresholdSpin_4, SLOT(setValue(int)));
        QObject::connect(upperThresholdSlider_4, SIGNAL(valueChanged(int)), upperThresholdSpin_4, SLOT(setValue(int)));
        QObject::connect(lowerThresholdSpin_4, SIGNAL(valueChanged(int)), lowerThresholdSlider_4, SLOT(setValue(int)));
        QObject::connect(upperThresholdSpin_4, SIGNAL(valueChanged(int)), upperThresholdSlider_4, SLOT(setValue(int)));

        toolBox->setCurrentIndex(6);
        levelSetTabWidget->setCurrentIndex(0);
        stackedWidget->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi

    void retranslateUi(QMainWindow *MainWindow)
    {
        MainWindow->setWindowTitle(QApplication::translate("MainWindow", "MainWindow", 0));
        actionOpen_mhd_file->setText(QApplication::translate("MainWindow", "open .mhd file", 0));
        actionOpen_mhd_file->setShortcut(QApplication::translate("MainWindow", "Meta+O", 0));
        actionOpen_DICOM_folder->setText(QApplication::translate("MainWindow", "open DICOM folder", 0));
        actionOpen_DICOM_folder->setShortcut(QApplication::translate("MainWindow", "Ctrl+O", 0));
        actionOpen_2D_image->setText(QApplication::translate("MainWindow", "open 2D image", 0));
        actionOnline_Tutorial->setText(QApplication::translate("MainWindow", "Online Tutorial", 0));
        actionAbout_MiaLite->setText(QApplication::translate("MainWindow", "About MiaLite", 0));
        actionPan->setText(QApplication::translate("MainWindow", "Pan", 0));
#ifndef QT_NO_TOOLTIP
        actionPan->setToolTip(QApplication::translate("MainWindow", "Move the images", 0));
#endif // QT_NO_TOOLTIP
        actionWindow_Setting->setText(QApplication::translate("MainWindow", "Window Setting", 0));
#ifndef QT_NO_TOOLTIP
        actionWindow_Setting->setToolTip(QApplication::translate("MainWindow", "Change the window setting", 0));
#endif // QT_NO_TOOLTIP
        actionZoom->setText(QApplication::translate("MainWindow", "Zoom", 0));
#ifndef QT_NO_TOOLTIP
        actionZoom->setToolTip(QApplication::translate("MainWindow", "Zoom in or out", 0));
#endif // QT_NO_TOOLTIP
        actionCurve_ROI->setText(QApplication::translate("MainWindow", "Curve ROI", 0));
#ifndef QT_NO_TOOLTIP
        actionCurve_ROI->setToolTip(QApplication::translate("MainWindow", "Creat curve ROI", 0));
#endif // QT_NO_TOOLTIP
        actionNextStep->setText(QApplication::translate("MainWindow", "NextStep", 0));
#ifndef QT_NO_TOOLTIP
        actionNextStep->setToolTip(QApplication::translate("MainWindow", "go to next step", 0));
#endif // QT_NO_TOOLTIP
        actionNextStep->setShortcut(QApplication::translate("MainWindow", "Ctrl+N", 0));
        actionLoadCenterline->setText(QApplication::translate("MainWindow", "LoadCenterline", 0));
#ifndef QT_NO_TOOLTIP
        actionLoadCenterline->setToolTip(QApplication::translate("MainWindow", "load external centerline", 0));
#endif // QT_NO_TOOLTIP
        actionLoadCenterline->setShortcut(QApplication::translate("MainWindow", "Ctrl+L", 0));
        actionThresholdBasedSegmentation->setText(QApplication::translate("MainWindow", "Threshold based segmentation", 0));
        actionClickDragInteractiveSegmentation->setText(QApplication::translate("MainWindow", "Click-Drag interactive segmentation", 0));
        actionModelBasedSegmentation->setText(QApplication::translate("MainWindow", "Model based segmentation", 0));
        actionRegistration->setText(QApplication::translate("MainWindow", "Registration", 0));
        actionModelBasedMethod->setText(QApplication::translate("MainWindow", "Shape model based segmentation", 0));
        actionVesselAnalysis->setText(QApplication::translate("MainWindow", "Vessel analysis", 0));
        actionBrainSegmentation->setText(QApplication::translate("MainWindow", "Brain segmentation", 0));
        actionLiverSegmentMarking->setText(QApplication::translate("MainWindow", "Liver segment marking", 0));
        actionLeftVentricleSegmentation->setText(QApplication::translate("MainWindow", "Left ventricle segmentation", 0));
        actionBodyPartDetectorTraining->setText(QApplication::translate("MainWindow", "Body part detector training", 0));
        actionBodyPartDetection->setText(QApplication::translate("MainWindow", "Body part detection", 0));
        actionOpen_Nifti_file->setText(QApplication::translate("MainWindow", "open Nifti file", 0));
        actionFuzzyConnectednessSegmentation->setText(QApplication::translate("MainWindow", "Fuzzy connectedness segmentation", 0));
        actionBoneSegmentationPrinting->setText(QApplication::translate("MainWindow", "Bone segmentation and printing", 0));
        actionOpen_VTK_file->setText(QApplication::translate("MainWindow", "open VTK file", 0));
        actionMutli_Layer_Level_Set->setText(QApplication::translate("MainWindow", "Mutli Layer Level Set", 0));
        actionMulti_seed_vessel_segmentation->setText(QApplication::translate("MainWindow", "Multi seed vessel segmentation", 0));
        openButton->setText(QApplication::translate("MainWindow", "Open Dataset", 0));
        label->setText(QApplication::translate("MainWindow", "What operation do you want to run on this image? ", 0));
        chooseOperationButton->setText(QApplication::translate("MainWindow", "Choose Operations", 0));
        label_8->setText(QApplication::translate("MainWindow", "Upper Threshold", 0));
        label_7->setText(QApplication::translate("MainWindow", "Lower Threshold", 0));
        nextstepBotton1->setText(QApplication::translate("MainWindow", "Next Step>", 0));
        label_11->setText(QApplication::translate("MainWindow", "Please give the threshold range", 0));
        imageSummary->setText(QApplication::translate("MainWindow", "No input image.", 0));
        toolBox->setItemText(toolBox->indexOf(step1), QApplication::translate("MainWindow", "Step 1: Loading Images", 0));
        nextstepBotton2->setText(QApplication::translate("MainWindow", "Next Step>", 0));
        prestepButton2->setText(QApplication::translate("MainWindow", "<Pre Step", 0));
        label_2->setText(QApplication::translate("MainWindow", "To draw a seed region simply click and drag the mouse on any of 2D views", 0));
        showBlockerCheckBox->setText(QApplication::translate("MainWindow", "show blocking region", 0));
        blockerGroupBox->setTitle(QApplication::translate("MainWindow", "Blocking Region", 0));
        seedButton->setText(QApplication::translate("MainWindow", "Draw Blocking Region", 0));
        label_10->setText(QApplication::translate("MainWindow", "Blocker List:", 0));
        label_9->setText(QApplication::translate("MainWindow", "Seed List:", 0));
        saveSeedButton->setText(QApplication::translate("MainWindow", "save", 0));
        loadSeedButton->setText(QApplication::translate("MainWindow", "load", 0));
        startFuzzyConectednessButton->setText(QApplication::translate("MainWindow", "Start Segmentation", 0));
        toolBox->setItemText(toolBox->indexOf(step2), QApplication::translate("MainWindow", "Step 2: Defining Seeds", 0));
        startButton->setText(QApplication::translate("MainWindow", "Start", 0));
        stopButton->setText(QApplication::translate("MainWindow", "Stop", 0));
        label_3->setText(QApplication::translate("MainWindow", "Progress:", 0));
        LSStatus->setText(QApplication::translate("MainWindow", "Initialized", 0));
        nextstepBotton3->setText(QApplication::translate("MainWindow", "Next Step>", 0));
        prestepButton3->setText(QApplication::translate("MainWindow", "<Pre Step", 0));
        label_5->setText(QApplication::translate("MainWindow", "Lower Threshold", 0));
        label_4->setText(QApplication::translate("MainWindow", "Upper Threshold", 0));
        label_6->setText(QApplication::translate("MainWindow", "Smoothing Factor:", 0));
        levelSetTabWidget->setTabText(levelSetTabWidget->indexOf(parameterTab), QApplication::translate("MainWindow", "Parameters", 0));
        label_12->setText(QApplication::translate("MainWindow", "Blocker List:", 0));
        label_13->setText(QApplication::translate("MainWindow", "You can now add or modify blocking regions with left clicking and dragging", 0));
        levelSetTabWidget->setTabText(levelSetTabWidget->indexOf(blockerTab), QApplication::translate("MainWindow", "Blockers", 0));
        blockerEditCheckBox->setText(QApplication::translate("MainWindow", "Allow Blocker Editing", 0));
        multi_Resolution_CheckBox->setText(QApplication::translate("MainWindow", "Speed Boosting", 0));
        speedBoostingHelpButton->setText(QApplication::translate("MainWindow", "?", 0));
        toolBox->setItemText(toolBox->indexOf(step3), QApplication::translate("MainWindow", "step 3: Segmenting", 0));
        saveButton->setText(QApplication::translate("MainWindow", "Save Raw Data", 0));
        saveSTLButton->setText(QApplication::translate("MainWindow", "Save 3D Mesh", 0));
        prestepButton4->setText(QApplication::translate("MainWindow", "<Pre Step", 0));
        label_14->setText(QApplication::translate("MainWindow", "Summary:", 0));
        gobackOsiriX->setText(QApplication::translate("MainWindow", "Back to OsiriX", 0));
        saveTextButton->setText(QApplication::translate("MainWindow", "Save To Text", 0));
        label_15->setText(QApplication::translate("MainWindow", "Smoothing Iterations:", 0));
        toolBox->setItemText(toolBox->indexOf(step4), QApplication::translate("MainWindow", "Step 4: Saving Results", 0));
        startVesselAnalysisButton->setText(QApplication::translate("MainWindow", "Start", 0));
        loadVesselCenterlineButton->setText(QApplication::translate("MainWindow", "Load Centerline", 0));
        stopVesselAnalysisButton->setText(QApplication::translate("MainWindow", "Stop", 0));
        label_16->setText(QApplication::translate("MainWindow", "Curvature Weighting", 0));
        exportVesselAnalysisButton->setText(QApplication::translate("MainWindow", "Export Radius", 0));
        loadRawButton->setText(QApplication::translate("MainWindow", "LoadRaw", 0));
        exportVTKButton->setText(QApplication::translate("MainWindow", "Save STL", 0));
        label_17->setText(QApplication::translate("MainWindow", "Lower Threshold", 0));
        label_22->setText(QApplication::translate("MainWindow", "Upper Threshold", 0));
        vesselStatusLabel->setText(QApplication::translate("MainWindow", "Not running", 0));
        exportCrossSectionButton->setText(QApplication::translate("MainWindow", "Save Manual Segmentation", 0));
        loadCrossSectionButton->setText(QApplication::translate("MainWindow", "Load Manual Segmentation", 0));
        initializeVesselCenterlineButton->setText(QApplication::translate("MainWindow", "Create Centerlines", 0));
        viewImageSourceVesselAnalyssisComboBox->clear();
        viewImageSourceVesselAnalyssisComboBox->insertItems(0, QStringList()
         << QApplication::translate("MainWindow", "InputImage", 0)
         << QApplication::translate("MainWindow", "Distancemap", 0)
         << QApplication::translate("MainWindow", "ThresholdMap", 0)
         << QApplication::translate("MainWindow", "CombinedMap", 0)
        );
        toolBox->setItemText(toolBox->indexOf(VesselAnalysisPage), QApplication::translate("MainWindow", "Vessel Analysis", 0));
        groupBox->setTitle(QApplication::translate("MainWindow", "Mouse Function", 0));
        setToAddingRadio->setText(QApplication::translate("MainWindow", "Add", 0));
        setToRemovingRadio->setText(QApplication::translate("MainWindow", "Remove", 0));
        interactiveSegmentParameterGroupBox->setTitle(QApplication::translate("MainWindow", "Parameters", 0));
        label_20->setText(QApplication::translate("MainWindow", "Smoothing Factor:", 0));
        label_18->setText(QApplication::translate("MainWindow", "Upper Threshold", 0));
        label_19->setText(QApplication::translate("MainWindow", "Lower Threshold", 0));
        usingAutomaticThresholdButton->setText(QApplication::translate("MainWindow", "Automatically Set Thresholds", 0));
        showAdvancedSettingsForInteractiveSegButton->setText(QApplication::translate("MainWindow", "Show Advanced Settings", 0));
        label_21->setText(QApplication::translate("MainWindow", "Results:", 0));
        resetButton->setText(QApplication::translate("MainWindow", "Reset", 0));
        saveButton_interactive->setText(QApplication::translate("MainWindow", "Save Result && Quit", 0));
        undoButton->setText(QApplication::translate("MainWindow", "Undo", 0));
        gobackOsiriX2->setText(QApplication::translate("MainWindow", "Back to OsiriX", 0));
        saveTextButton_2->setText(QApplication::translate("MainWindow", "SaveToText", 0));
        toolBox->setItemText(toolBox->indexOf(InteracitveSegmentationPage), QApplication::translate("MainWindow", "Interactive segmentation", 0));
        startRegistrationButton->setText(QApplication::translate("MainWindow", "Start", 0));
        openMovingImageButton->setText(QApplication::translate("MainWindow", "Open Image", 0));
        resetRegistrationButton->setText(QApplication::translate("MainWindow", "Reset", 0));
        viewImageSource->clear();
        viewImageSource->insertItems(0, QStringList()
         << QApplication::translate("MainWindow", "Input Image", 0)
         << QApplication::translate("MainWindow", "IntensityMap", 0)
         << QApplication::translate("MainWindow", "DistanceMap", 0)
         << QApplication::translate("MainWindow", "SpeedMap", 0)
         << QApplication::translate("MainWindow", "LevelSetOutput", 0)
        );
        saveRegistrationButton->setText(QApplication::translate("MainWindow", "SaveTransform", 0));
        loadRegistrationButton->setText(QApplication::translate("MainWindow", "LoadTransform", 0));
        modelMaskCheckBox->setText(QApplication::translate("MainWindow", "Show Model Mask", 0));
        levesSetMaskCheckBox->setText(QApplication::translate("MainWindow", "Show Level set Mask", 0));
        saveRegistrationResultButton->setText(QApplication::translate("MainWindow", "SaveResult", 0));
        saveSegmentationResultButton->setText(QApplication::translate("MainWindow", "SaveSegment", 0));
        label_24->setText(QApplication::translate("MainWindow", "Translate", 0));
        label_25->setText(QApplication::translate("MainWindow", "Rotation", 0));
        label_26->setText(QApplication::translate("MainWindow", "Scale", 0));
        mappingLineEdit->setText(QString());
        label_27->setText(QApplication::translate("MainWindow", "Mapping", 0));
        openWeightingImageButton->setText(QApplication::translate("MainWindow", "Open weightImage", 0));
        phaseSelectionButton->clear();
        phaseSelectionButton->insertItems(0, QStringList()
         << QApplication::translate("MainWindow", "Do not use phase map", 0)
         << QApplication::translate("MainWindow", "Favor Black-White edge", 0)
         << QApplication::translate("MainWindow", "Favor White-Black edge", 0)
        );
        toolBox->setItemText(toolBox->indexOf(RegistrationPage), QApplication::translate("MainWindow", "Registration", 0));
        startWMSegmentationButton->setText(QApplication::translate("MainWindow", "start WM", 0));
        startGMSegmentationButton->setText(QApplication::translate("MainWindow", "start GM", 0));
        saveBrainResultButton->setText(QApplication::translate("MainWindow", "Save Results", 0));
        creatSurfaceModelButton->setText(QApplication::translate("MainWindow", "Create Model", 0));
        viewImageSourceComboBox->clear();
        viewImageSourceComboBox->insertItems(0, QStringList()
         << QApplication::translate("MainWindow", "InputImage", 0)
         << QApplication::translate("MainWindow", "WMDistanceMap", 0)
         << QApplication::translate("MainWindow", "GMDistanceMap", 0)
         << QApplication::translate("MainWindow", "CombinedDistanceMap", 0)
         << QApplication::translate("MainWindow", "CombinedSkeletonMap", 0)
         << QApplication::translate("MainWindow", "GMModel", 0)
         << QApplication::translate("MainWindow", "WMIntensityCombinedModel", 0)
         << QApplication::translate("MainWindow", "GMIntensityCombinedModel", 0)
         << QApplication::translate("MainWindow", "curvature", 0)
        );
        whiteMatterMaskCheckBox->setText(QApplication::translate("MainWindow", "Show WM Mask", 0));
        grayMatterMaskCheckBox->setText(QApplication::translate("MainWindow", "Show GM Mask", 0));
        surfaceModelMaskCheckBox->setText(QApplication::translate("MainWindow", "Show Model Mask", 0));
        LSStatus_BrainPage->setText(QApplication::translate("MainWindow", "Initialized", 0));
        label_23->setText(QApplication::translate("MainWindow", "Progress:", 0));
        applySurfaceModelButton->setText(QApplication::translate("MainWindow", "Apply Model", 0));
        toolBox->setItemText(toolBox->indexOf(brainSegmentationPage), QApplication::translate("MainWindow", "Brain Segmentation", 0));
        gotoPreviousTrainingImageButton->setText(QApplication::translate("MainWindow", "Previous", 0));
        gotoNextTrainingImageButton->setText(QApplication::translate("MainWindow", "Next", 0));
        addTrainningImageButton->setText(QApplication::translate("MainWindow", "+", 0));
        label_28->setText(QApplication::translate("MainWindow", "Add new image", 0));
        saveTrainingSettingButton->setText(QApplication::translate("MainWindow", "save", 0));
        loadTrainingSettingButton->setText(QApplication::translate("MainWindow", "load", 0));
        label_29->setText(QApplication::translate("MainWindow", "ROIs", 0));
        startTrainingButton->setText(QApplication::translate("MainWindow", "Start Training", 0));
        saveTrainedForest->setText(QApplication::translate("MainWindow", "save forest", 0));
        loadTrainedForest->setText(QApplication::translate("MainWindow", "load forest", 0));
        toolBox->setItemText(toolBox->indexOf(randomForestTrainingPage), QApplication::translate("MainWindow", "Training", 0));
        nextAngleButton->setText(QApplication::translate("MainWindow", "Next Preset Angle", 0));
        nextPositionButton->setText(QApplication::translate("MainWindow", "Next Preset Position", 0));
        menuFile->setTitle(QApplication::translate("MainWindow", "File", 0));
        menuOpen->setTitle(QApplication::translate("MainWindow", "Open Dataset", 0));
        menuHelp->setTitle(QApplication::translate("MainWindow", "Help", 0));
        menuOperations->setTitle(QApplication::translate("MainWindow", "Operation", 0));
        menuWorkFlow->setTitle(QApplication::translate("MainWindow", "WorkFlow", 0));
    } // retranslateUi

};

namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MAINWINDOW_H
